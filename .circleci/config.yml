---
version: 2.1
commands:
  pytest:
    parameters:
      pythonversion:
        type: string
    steps:
      - restore_cache:
          key: pytest-v1-<< parameters.pythonversion >>-{{ checksum "setup.py" }}
      - run: |
          if [ ! -d ".venv" ]; then
            python3 -m venv ./.venv
          fi
          . ./.venv/bin/activate
          pip3 install --upgrade pip
          pip3 install -r ./.circleci/requirements.build.txt

          tox -v -e py<< parameters.pythonversion >>
      - save_cache:
          key: pytest-v1-<< parameters.pythonversion >>-{{ checksum "setup.py" }}
          paths:
            - ".tox"
            - ".venv"
            - "$HOME/.cache/pip"
jobs:
  build35:
    docker:
      - image: circleci/python:3.9
    environment:
      ARTIFACTS: /tmp/jsmapper
    steps:
      - checkout: {}
      - pytest:
          pythonversion: "35"
      - store_test_results:
          path: "/tmp/jsmapper"
      - store_artifacts:
          path: "/tmp/jsmapper"
  build36:
    docker:
      - image: circleci/python:3.9
    environment:
      ARTIFACTS: /tmp/jsmapper
    steps:
      - checkout: {}
      - pytest:
          pythonversion: "36"
      - store_test_results:
          path: "/tmp/jsmapper"
      - store_artifacts:
          path: "/tmp/jsmapper"
  build37:
    docker:
      - image: circleci/python:3.9
    environment:
      ARTIFACTS: /tmp/jsmapper
    steps:
      - checkout: {}
      - pytest:
          pythonversion: "37"
      - store_test_results:
          path: "/tmp/jsmapper"
      - store_artifacts:
          path: "/tmp/jsmapper"
  build38:
    docker:
      - image: circleci/python:3.9
    environment:
      ARTIFACTS: /tmp/jsmapper
    steps:
      - checkout: {}
      - pytest:
          pythonversion: "38"
      - store_test_results:
          path: "/tmp/jsmapper"
      - store_artifacts:
          path: "/tmp/jsmapper"
workflows:
  version: 2
  build_and_deploy:
    jobs:
      - build35: {}
      - build36: {}
      - build37: {}
      - build38: {}
...
